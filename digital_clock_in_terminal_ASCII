#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h> // for sleep()
#include <string.h>

// Clear screen using ANSI escape codes
void clear_screen() {
    printf("\033[2J\033[H");
}

// Print time in HH:MM:SS format with ASCII styling
void print_time_ascii(int h, int m, int s) {
    char digits[10][5][6] = {
        { " __  ", "|  | ", "|  | ", "|  | ", "|__| " },  // 0
        { "     ", "   | ", "   | ", "   | ", "   | " },  // 1
        { " __  ", "   | ", " __| ", "|    ", "|___ " },  // 2
        { " __  ", "   | ", " __| ", "   | ", " __| " },  // 3
        { "     ", "|  | ", "|__| ", "   | ", "   | " },  // 4
        { " __  ", "|    ", "|__  ", "   | ", " __| " },  // 5
        { " __  ", "|    ", "|__  ", "|  | ", "|__| " },  // 6
        { " __  ", "   | ", "   | ", "   | ", "   | " },  // 7
        { " __  ", "|  | ", "|__| ", "|  | ", "|__| " },  // 8
        { " __  ", "|  | ", "|__| ", "   | ", " __| " }   // 9
    };

    char colon[5][3] = {
        "   ",
        " o ",
        "   ",
        " o ",
        "   "
    };

    int time_digits[8] = {
        h / 10, h % 10,
        -1,
        m / 10, m % 10,
        -1,
        s / 10, s % 10
    };

    for (int row = 0; row < 5; row++) {
        for (int i = 0; i < 8; i++) {
            if (time_digits[i] == -1) {
                printf("%s ", colon[row]);
            } else {
                printf("%s ", digits[time_digits[i]][row]);
            }
        }
        printf("\n");
    }
}

int main() {
    while (1) {
        time_t t = time(NULL);
        struct tm *tm_info = localtime(&t);

        int h = tm_info->tm_hour;
        int m = tm_info->tm_min;
        int s = tm_info->tm_sec;

        clear_screen();
        print_time_ascii(h, m, s);
        sleep(1);
    }

    return 0;
}
